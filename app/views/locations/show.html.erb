<meta name="viewport" content="width=device-width, initial-scale=1">

<div class="container">
  <div id="location-show" class="row text-center">

    <!-- left and right containers for desktop view only -->
    <div class="left-container translucent div-prettified">
      <div class="location-summary">
        <p>The zipcode <strong><%= @location.zipcode %></strong> has a safety score of </p>

        <h1><b><font size="8" color=<%= @location.score_color %>><%= @location.score %></b></font>
          <font size="5" color="#000000">/100</font></h1>

        <p>This area is <b><font color=<%= @location.score_color %>><%= @location.score_phrase %></b></font>.</p>
      </div>

      <div class="crime-map-sm" style="height: 300px; width: 80%">
      </div>

      <div class="location-statistics">
        <h3>2018 Statistics</h3>
        <div class="stats-container">
          <ul>
            <li>Thefts:  <%= @location.theft_count %></li>
            <li>Robberies: <%= @location.robbery_count %></li>
            <li>Break-ins:  <%= @location.burglary_count %></li>
          </ul>
          <ul>
            <li>Assaults: <%= @location.assault_count %></li>
            <li>Rapes: <%= @location.rape_count %></li>
            <li>Shootings:  <%= @location.shooting_count %></li>
          </ul>
        </div>
      </div>

      <div class="links">
        <a href="/how-to-help"><button>Want to help improve this score?</button></a>
        <br>
        <br>
        <p><%= link_to 'How we calculate safety scores', info_path %></p>
      </div>
    </div>

    <div class="right-container div-prettified">
      <div class="crime-map-lg" style="height: 400px">
      </div>

      <a href="/"><button class="btn btn-nice btn-lg btn-block">Search Another Zip Code</button></a>
    </div>

  </div>
</div>
<script>
    // This example uses the Google Maps JavaScript API's Data layer
    // to create a rectangular polygon with 2 holes in it.
    function initMap() {
        function httpGet(theUrl) {
            let xmlHttp = new XMLHttpRequest();
            xmlHttp.open('GET', theUrl, false); // false for synchronous request
            xmlHttp.send(null);
            return xmlHttp.responseText;
        }

        let outerCoords = JSON.parse(httpGet('/locations/<%= @location.id %>/polygons')).values;

        let center = {lat: 33.518589, lng: -86.810356};

        if (outerCoords[0] !== undefined) {
            center = outerCoords[0]
        }

        let map_sm = new google.maps.Map(document.querySelector('.crime-map-sm'), {
            zoom: 11,
            center: center,
            disableDefaultUI: true
        });
        let map_lg = new google.maps.Map(document.querySelector('.crime-map-lg'), {
            zoom: 11,
            center: center,
            disableDefaultUI: true
        });

        let poly_sm = new google.maps.Polygon({
            paths: outerCoords,
            strokeColor: '#FF0000',
            strokeOpacity: 0.8,
            strokeWeight: 3,
            fillColor: '#FF0000',
            fillOpacity: 0.35
        });

        let poly_lg = new google.maps.Polygon({
            paths: outerCoords,
            strokeColor: '#FF0000',
            strokeOpacity: 0.8,
            strokeWeight: 3,
            fillColor: '#FF0000',
            fillOpacity: 0.35
        });

        var current_location = null;

        function setMaps() {
            // Add markers to maps
            if (current_location) {
                let marker_sm = new google.maps.Marker({
                    position: current_location,
                    map: map_sm,
                    title: 'You are here!',
                    animation: google.maps.Animation.DROP
                });

                let marker_lg = new google.maps.Marker({
                    position: current_location,
                    map: map_lg,
                    title: 'You are here!',
                    animation: google.maps.Animation.DROP
                });
            }

            // Add maps to divs
            poly_sm.setMap(map_sm);
            poly_lg.setMap(map_lg);
        }

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                current_location = {lat: position.coords.latitude, lng: position.coords.longitude};
                setMaps();
            });
        } else {
            alert("Geolocation is not supported by this browser.");
        }


    }
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAb8ZbLeacX5Lrnpfg9Ci-Iau9gO_Ks2GE&callback=initMap">
</script>
